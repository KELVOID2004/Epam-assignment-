const promise1 = new Promise((resolve) => setTimeout(resolve, 1000, 'Result 1'));
const promise2 = new Promise((resolve) => setTimeout(resolve, 2000, 'Result 2'));
const promise3 = new Promise((_, reject) => setTimeout(reject, 3000, 'Error in Promise 3'));
const promise4 = new Promise((resolve) => setTimeout(resolve, 4000, 'Result 4'));
const promise5 = new Promise((resolve) => setTimeout(resolve, 5000, 'Result 5'));

async function handlePromises() {
  const promises = [promise1, promise2, promise3, promise4, promise5];

  try {
    const results = await Promise.allSettled(promises);

    results.forEach((result, index) => {
      if (result.status === 'fulfilled') {
        console.log(`Promise ${index + 1} succeeded with value: ${result.value}`);
      } else {
        console.log(`Promise ${index + 1} failed with reason: ${result.reason}`);
      }
    });
  } catch (error) {
    console.error('An error occurred while handling promises:', error);
  }
}

handlePromises();
